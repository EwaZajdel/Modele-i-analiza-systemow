import math
import sys
from cs50 import get_float

#1 Write a function countField which calculates the field of a given figure. It takes the following input parameters:
# - type: circle/rectangle/triangle/rhombus
# - x & optional y.
# For circle we get only x which stands for radius. For Rectangle x&y are the figure's sides, for triangle they are
# accordingly the base and the height and for rhombus - diagonals (4p)
def countField():
    figures = ["circle", "rectangle", "triangle", "rhombus"]

    fig1 = (input("Figure (circle, rectangle, triangle or rhombus): ")).lower()

    while fig1 not in figures:
        print("Choose other figure: circle, rectangle, triangle or rhombus")
        fig1 = (input("Figure:"))

    if fig1 == 'circle':
        r = get_float("Give r ")
        if r >= 0:
            pole = math.pi * r * r
            print("The field of circle is:", pole)
        else:
            print("The number should be graater then 0")
            sys.exit("Try one more time")


    elif fig1 == 'rectangle':
        a = get_float("Give a ")
        if a < 0:
            print("The number should be graater then 0")
            sys.exit("Try one more time")
        else:
            b = get_float("Give b ")
            if b >= 0:
                pole = a * b
                print("The field of rectangle is:", pole)
            else:
                print("The number should be graater then 0")
                sys.exit("Try one more time")

    elif fig1 == 'triangle':
        a = get_float("Give a ")
        if a < 0:
            print("The number should be graater then 0")
            sys.exit("Try one more time")
        else:
            h = get_float("Give h ")
            if h >= 0:
                pole = 1 / 2 * a * h
                print("The field of triangle is:", pole)
            else:
                print("The number should be graater then 0")
                sys.exit("Try one more time")

    elif fig1 == 'rhombus':
        d1 = get_float("Give d1 ")
        if d1 < 0:
            print("The number should be graater then 0")
            sys.exit("Try one more time")
        else:
            d2 = get_float("Give d2 ")
            if d2 >= 0:
                pole = 1 / 2 * d1 * d2
                print("The field of rhombus is:", pole)
            else:
                print("The number should be graater then 0")
                sys.exit("Try one more time")


countField()
